{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-simple-modal/simple-modal/simple-modal-options.ts","ng://ngx-simple-modal/simple-modal/simple-modal-wrapper.component.ts","ng://ngx-simple-modal/simple-modal/simple-modal-holder.component.ts","ng://ngx-simple-modal/simple-modal/simple-modal.service.ts","ng://ngx-simple-modal/simple-modal/simple-modal-service.factory.ts","ng://ngx-simple-modal/simple-modal/simple-modal.module.ts","ng://ngx-simple-modal/simple-modal/simple-modal.component.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","DefaultSimpleModalOptionConfig","InjectionToken","defaultSimpleModalOptions","closeOnEscape","closeOnClickOutside","bodyClass","wrapperDefaultClasses","wrapperClass","animationDuration","autoFocus","SimpleModalWrapperComponent","resolver","this","modalClasses","prototype","addComponent","component","factory","resolveComponentFactory","injector","ReflectiveInjector","fromResolvedProviders","viewContainer","componentRef","create","insert","hostView","content","instance","wrapper","onClickOutsideModalContent","callback","containerEl","nativeElement","clickOutsideCallback","event","addEventListener","ngOnDestroy","removeEventListener","ComponentFactoryResolver","tslib_1.__decorate","ViewChild","read","ViewContainerRef","static","ElementRef","Component","selector","template","SimpleModalHolderComponent","modals","previousActiveElement","addModal","data","options","_this","of","modalWrapper","createComponent","_component","assign","wait","then","toggleWrapperClass","toggleBodyClass","autoFocusFirstElement","markAsReady","onClosing","modal","removeModal","configureCloseOnClickOutside","mapDataObject","setupObserver","closingModal","removeModalFromArray","restorePreviousFocus","removeAllModals","Promise","all","map","body","document","getElementsByTagName","bodyClassItems","split","_b","classList","add","apply","_a","remove","close","componentWrapper","focusable","querySelectorAll","activeElement","focus","modalWrapperEl","wrapperClassList","wrapperClassItems","toString","indexOf","ms","resolve","reject","setTimeout","index","splice","Inject","args","tslib_1.__param","container","SimpleModalService","applicationRef","config","modalHolderComponent","createSimpleModalHolder","removeAll","_container","getElementById","componentRootViewContainer","rootNodes","componentRootNode","attachView","onDestroy","detachView","appendChild","ApplicationRef","Injector","SimpleModalServiceConfig","type","Optional","Injectable","SimpleModalServiceFactory","SimpleModalModule","forRoot","defaultModalOptions","ngModule","SimpleModalModule_1","providers","provide","useValue","useFactory","deps","NgModule","declarations","Éµ0","imports","CommonModule","entryComponents","SimpleModalComponent","_ready$","BehaviorSubject","closerCallback","keys","length_1","Observable","observer","v","result","complete","onKeydownHandler","evt","asObservable","HostListener"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const DefaultSimpleModalOptionConfig = new InjectionToken<SimpleModalOptions>('default-simple-modal.config');\r\n\r\nexport interface SimpleModalOptions {\r\n  closeOnEscape: boolean;\r\n  closeOnClickOutside: boolean;\r\n  bodyClass: string;\r\n  wrapperDefaultClasses: string;\r\n  wrapperClass: string;\r\n  animationDuration: number;\r\n  autoFocus: boolean;\r\n}\r\n\r\nexport type SimpleModalOptionsOverrides = Partial<SimpleModalOptions>;\r\n\r\nexport const defaultSimpleModalOptions: SimpleModalOptions = {\r\n  closeOnEscape: false,\r\n  closeOnClickOutside: false,\r\n  bodyClass: 'modal-open',\r\n  wrapperDefaultClasses: 'modal fade-anim',\r\n  wrapperClass: 'in',\r\n  animationDuration: 300,\r\n  autoFocus: false\r\n};\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ReflectiveInjector,\r\n  Type,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { SimpleModalComponent } from './simple-modal.component';\r\n\r\n/**\r\n * The modal backdrop wrapping wrapper to the modal\r\n */\r\n@Component({\r\n  selector: 'simple-modal-wrapper',\r\n  template: `\r\n    <div #wrapper [ngClass]=\"modalClasses\" [ngStyle]=\"{ display: 'block' }\" role=\"dialog\">\r\n      <ng-template #viewContainer></ng-template>\r\n    </div>\r\n  `,\r\n})\r\nexport class SimpleModalWrapperComponent implements OnDestroy {\r\n  /**\r\n   * Target viewContainer to insert modal content component\r\n   */\r\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\r\n\r\n  /**\r\n   * Link wrapper DOM element\r\n   */\r\n  @ViewChild('wrapper', { read: ElementRef, static: true })\r\n  wrapper: ElementRef;\r\n\r\n  /**\r\n   * Wrapper modal and fade classes\r\n   */\r\n  modalClasses = 'modal fade-anim';\r\n\r\n  /**\r\n   * Dialog content componet\r\n   * @type {SimpleModalComponent}\r\n   */\r\n  content: SimpleModalComponent<any, any>;\r\n\r\n  /**\r\n   * Click outside callback\r\n   */\r\n  clickOutsideCallback: (event: MouseEvent) => void;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {ComponentFactoryResolver} resolver\r\n   */\r\n  constructor(private resolver: ComponentFactoryResolver) {}\r\n\r\n  /**\r\n   * Adds content modal component to wrapper\r\n   * @param {Type<SimpleModalComponent>} component\r\n   * @return {SimpleModalComponent}\r\n   */\r\n  addComponent<T, T1>(component: Type<SimpleModalComponent<T, T1>>) {\r\n    const factory = this.resolver.resolveComponentFactory(component);\r\n    const injector = ReflectiveInjector.fromResolvedProviders([], this.viewContainer.injector);\r\n    const componentRef = factory.create(injector);\r\n    this.viewContainer.insert(componentRef.hostView);\r\n    this.content = <SimpleModalComponent<T, T1>>componentRef.instance;\r\n    this.content.wrapper = this.wrapper;\r\n    return this.content;\r\n  }\r\n\r\n  /**\r\n   * Configures the function to call when you click on background of a modal but not the contents\r\n   * @param callback\r\n   */\r\n  onClickOutsideModalContent(callback: () => void) {\r\n    const containerEl = this.wrapper.nativeElement;\r\n\r\n    this.clickOutsideCallback = (event: MouseEvent) => {\r\n      if (event.target === containerEl) {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    containerEl.addEventListener('click', this.clickOutsideCallback, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.clickOutsideCallback) {\r\n      const containerEl = this.wrapper.nativeElement;\r\n      containerEl.removeEventListener('click', this.clickOutsideCallback, false);\r\n      this.clickOutsideCallback = null;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ElementRef,\r\n  Inject,\r\n  Type,\r\n  ViewContainerRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport {\r\n  DefaultSimpleModalOptionConfig,\r\n  SimpleModalOptions,\r\n  SimpleModalOptionsOverrides,\r\n} from './simple-modal-options';\r\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\r\nimport { SimpleModalComponent } from './simple-modal.component';\r\n\r\n/**\r\n * View container manager which manages a list of modals currently active\r\n * inside the viewvontainer\r\n */\r\n@Component({\r\n  selector: 'simple-modal-holder',\r\n  template: '<ng-template #viewContainer></ng-template>',\r\n})\r\nexport class SimpleModalHolderComponent {\r\n  /**\r\n   * Target viewContainer to insert modals\r\n   */\r\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\r\n\r\n  /**\r\n   * modal collection, maintained by addModal and removeModal\r\n   * @type {Array<SimpleModalComponent> }\r\n   */\r\n  modals: Array<SimpleModalComponent<any, any>> = [];\r\n\r\n  /**\r\n   * if auto focus is on and no element focused, store it here to be restored back after close\r\n   */\r\n  previousActiveElement = null;\r\n\r\n  /**\r\n   * Constructor\r\n   * @param {ComponentFactoryResolver} resolver\r\n   */\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    @Inject(DefaultSimpleModalOptionConfig) private defaultSimpleModalOptions: SimpleModalOptions\r\n  ) {}\r\n\r\n  /**\r\n   * Configures then adds modal to the modals array, and populates with data passed in\r\n   * @param {Type<SimpleModalComponent>} component\r\n   * @param {object?} data\r\n   * @param {SimpleModalOptionsOverrides?} options\r\n   * @return {Observable<*>}\r\n   */\r\n  addModal<T, T1>(\r\n    component: Type<SimpleModalComponent<T, T1>>,\r\n    data?: T,\r\n    options?: SimpleModalOptionsOverrides\r\n  ): Observable<T1> {\r\n    // create component\r\n    if (!this.viewContainer) {\r\n      return of(null);\r\n    }\r\n    const factory = this.resolver.resolveComponentFactory(SimpleModalWrapperComponent);\r\n    const componentRef = this.viewContainer.createComponent(factory);\r\n    const modalWrapper: SimpleModalWrapperComponent = <SimpleModalWrapperComponent>(\r\n      componentRef.instance\r\n    );\r\n    const _component: SimpleModalComponent<T, T1> = modalWrapper.addComponent(component);\r\n\r\n    // assign options refs\r\n    _component.options = options = Object.assign({}, this.defaultSimpleModalOptions, options);\r\n\r\n    // set base classes for wrapper\r\n    modalWrapper.modalClasses = options.wrapperDefaultClasses;\r\n\r\n    // add to stack\r\n    this.modals.push(_component);\r\n\r\n    // wait a tick then setup the following while adding a modal\r\n    this.wait().then(() => {\r\n      this.toggleWrapperClass(modalWrapper.wrapper, options.wrapperClass);\r\n      this.toggleBodyClass(options.bodyClass);\r\n      this.wait(options.animationDuration).then(() => {\r\n        this.autoFocusFirstElement(_component.wrapper, options.autoFocus);\r\n        _component.markAsReady();\r\n      });\r\n    });\r\n\r\n    // when closing modal remove it\r\n    _component.onClosing(modal => this.removeModal(modal));\r\n\r\n    // if clicking on background closes modal\r\n    this.configureCloseOnClickOutside(modalWrapper);\r\n\r\n    // map and return observable\r\n    _component.mapDataObject(data);\r\n\r\n    return _component.setupObserver();\r\n  }\r\n\r\n  /**\r\n   * triggers components close function\r\n   * to take effect\r\n   * @param {SimpleModalComponent} component\r\n   * @returns {Promise<void>}\r\n   */\r\n  removeModal(closingModal: SimpleModalComponent<any, any>): Promise<any> {\r\n    const options = closingModal.options;\r\n    this.toggleWrapperClass(closingModal.wrapper, options.wrapperClass);\r\n    return this.wait(options.animationDuration).then(() => {\r\n      this.removeModalFromArray(closingModal);\r\n      this.toggleBodyClass(options.bodyClass);\r\n      this.restorePreviousFocus();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Instructs all open modals to\r\n   */\r\n  removeAllModals(): Promise<any> {\r\n    return Promise.all(this.modals.map(modal => this.removeModal(modal)));\r\n  }\r\n\r\n  /**\r\n   * Bind a body class 'modal-open' to a condition of modals in pool > 0\r\n   * @param bodyClass - string to add and remove from body in document\r\n   */\r\n  private toggleBodyClass(bodyClass: string) {\r\n    if (!bodyClass) {\r\n      return;\r\n    }\r\n    const body = document.getElementsByTagName('body')[0];\r\n    const bodyClassItems = bodyClass.split(' ');\r\n    if (!this.modals.length) {\r\n      body.classList.remove(...bodyClassItems);\r\n    } else {\r\n      body.classList.add(...bodyClassItems);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * if the option to close on background click is set, then hook up a callback\r\n   * @param options\r\n   * @param modalWrapper\r\n   */\r\n  private configureCloseOnClickOutside(modalWrapper: SimpleModalWrapperComponent) {\r\n    if (modalWrapper.content.options.closeOnClickOutside) {\r\n      modalWrapper.onClickOutsideModalContent(() => {\r\n        modalWrapper.content.close();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Auto focus o the first element if autofocus is on\r\n   * @param options\r\n   * @param modalWrapperEl\r\n   */\r\n  private autoFocusFirstElement(componentWrapper: ElementRef, autoFocus: boolean) {\r\n    if (autoFocus) {\r\n      const focusable = componentWrapper.nativeElement.querySelectorAll(\r\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\r\n      );\r\n      if (focusable && focusable.length) {\r\n        this.previousActiveElement = document.activeElement;\r\n        focusable[0].focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restores the last focus is there was one\r\n   */\r\n  private restorePreviousFocus() {\r\n    if (this.previousActiveElement) {\r\n      this.previousActiveElement.focus();\r\n      this.previousActiveElement = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configure the adding and removal of a wrapper class - predominantly animation focused\r\n   * @param options\r\n   * @param modalWrapperEl\r\n   */\r\n  private toggleWrapperClass(modalWrapperEl: ElementRef, wrapperClass: string) {\r\n    const wrapperClassList = modalWrapperEl.nativeElement.classList;\r\n    const wrapperClassItems = wrapperClass.split(' ');\r\n    if (wrapperClassList.toString().indexOf(wrapperClass) !== -1) {\r\n      wrapperClassList.remove(...wrapperClassItems);\r\n    } else {\r\n      wrapperClassList.add(...wrapperClassItems);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper function for a more readable timeout\r\n   * @param ms\r\n   */\r\n  private wait(ms: number = 0) {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => resolve(), ms);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Instructs the holder to remove the modal and\r\n   * removes this component from the collection\r\n   * @param {SimpleModalComponent} component\r\n   */\r\n  private removeModalFromArray(component) {\r\n    const index = this.modals.indexOf(component);\r\n    if (index > -1) {\r\n      this.viewContainer.remove(index);\r\n      this.modals.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  EmbeddedViewRef,\r\n  Injectable,\r\n  Injector,\r\n  Optional,\r\n  Type,\r\n} from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\r\nimport { SimpleModalComponent } from './simple-modal.component';\r\nimport { SimpleModalOptionsOverrides } from './simple-modal-options';\r\n\r\nexport class SimpleModalServiceConfig {\r\n  container: HTMLElement | string = null;\r\n}\r\n\r\n@Injectable()\r\nexport class SimpleModalService {\r\n  /**\r\n   * Placeholder of modals\r\n   * @type {SimpleModalHolderComponent}\r\n   */\r\n  private modalHolderComponent: SimpleModalHolderComponent;\r\n\r\n  /**\r\n   * HTML container for modals\r\n   * type {HTMLElement | string}\r\n   */\r\n  private _container;\r\n\r\n  /**\r\n   * @param {ComponentFactoryResolver} resolver\r\n   * @param {ApplicationRef} applicationRef\r\n   * @param {Injector} injector\r\n   * @param {SimpleModalServiceConfig} config\r\n   */\r\n  constructor(\r\n    private resolver: ComponentFactoryResolver,\r\n    private applicationRef: ApplicationRef,\r\n    private injector: Injector,\r\n    @Optional() config: SimpleModalServiceConfig\r\n  ) {\r\n    if (config) {\r\n      this.container = config.container as any;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds modal\r\n   * @param {Type<SimpleModalComponent<T, T1>>} component\r\n   * @param {T?} data\r\n   * @param {SimpleModalOptionsOverrides?} options\r\n   * @return {Observable<T1>}\r\n   */\r\n  addModal<T, T1>(\r\n    component: Type<SimpleModalComponent<T, T1>>,\r\n    data?: T,\r\n    options?: SimpleModalOptionsOverrides\r\n  ): Observable<T1> {\r\n    if (!this.modalHolderComponent) {\r\n      this.modalHolderComponent = this.createSimpleModalHolder();\r\n    }\r\n    return this.modalHolderComponent.addModal<T, T1>(component, data, options);\r\n  }\r\n\r\n  /**\r\n   * Hides and removes modal from DOM, resolves promise when fully removed\r\n   * @param {SimpleModalComponent} component\r\n   * @return {Promise<{}>}\r\n\r\n   */\r\n  removeModal(component: SimpleModalComponent<any, any>): Promise<{}> {\r\n    if (!this.modalHolderComponent) {\r\n      return Promise.resolve({});\r\n    }\r\n    return this.modalHolderComponent.removeModal(component);\r\n  }\r\n\r\n  /**\r\n   * Closes all modals, resolves promise when they're fully removed\r\n   * @return {Promise<{}>}\r\n   */\r\n  removeAll(): Promise<{}> {\r\n    if (!this.modalHolderComponent) {\r\n      return Promise.resolve({});\r\n    }\r\n    return this.modalHolderComponent.removeAllModals();\r\n  }\r\n\r\n  /**\r\n   * Accessor for contain - will auto generate from string\r\n   * if needed or default to the root element if nothing was set\r\n   */\r\n\r\n  private set container(c) {\r\n    this._container = c;\r\n  }\r\n\r\n  private get container(): HTMLElement {\r\n    if (typeof this._container === 'string') {\r\n      this._container = document.getElementById(this._container);\r\n    }\r\n\r\n    if (!this._container && this.applicationRef['components'].length) {\r\n      const componentRootViewContainer = this.applicationRef['components'][0];\r\n      this.container = (componentRootViewContainer.hostView as EmbeddedViewRef<any>)\r\n        .rootNodes[0] as HTMLElement;\r\n    }\r\n\r\n    // fallback\r\n    if (!this._container || typeof this._container === 'string') {\r\n      this._container = document.getElementsByTagName('body')[0];\r\n    }\r\n\r\n    return this._container;\r\n  }\r\n\r\n  /**\r\n   * Creates and add to DOM modal holder component\r\n   * @return {SimpleModalHolderComponent}\r\n   */\r\n  private createSimpleModalHolder(): SimpleModalHolderComponent {\r\n    const componentFactory = this.resolver.resolveComponentFactory(SimpleModalHolderComponent);\r\n\r\n    const componentRef = componentFactory.create(this.injector);\r\n    const componentRootNode = (componentRef.hostView as EmbeddedViewRef<any>)\r\n      .rootNodes[0] as HTMLElement;\r\n\r\n    this.applicationRef.attachView(componentRef.hostView);\r\n\r\n    componentRef.onDestroy(() => {\r\n      this.applicationRef.detachView(componentRef.hostView);\r\n    });\r\n\r\n    this.container.appendChild(componentRootNode);\r\n\r\n    return componentRef.instance;\r\n  }\r\n}\r\n","import { ApplicationRef, ComponentFactoryResolver, Injector } from '@angular/core';\r\n\r\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\r\n\r\n/**\r\n * Modal service factory. Creates modal service with options\r\n * @param { ComponentFactoryResolver } resolver\r\n * @param { ApplicationRef } applicationRef\r\n * @param { Injector } injector\r\n * @param { SimpleModalServiceConfig } options\r\n * @return { SimpleModalService }\r\n */\r\nexport function SimpleModalServiceFactory(resolver: ComponentFactoryResolver,\r\n                                          applicationRef: ApplicationRef,\r\n                                          injector: Injector,\r\n                                          options: SimpleModalServiceConfig) {\r\n    return new SimpleModalService(resolver, applicationRef, injector, options);\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  Injector,\r\n  ModuleWithProviders,\r\n  NgModule,\r\n} from '@angular/core';\r\n\r\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\r\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\r\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\r\nimport { SimpleModalServiceFactory } from './simple-modal-service.factory';\r\nimport {\r\n  defaultSimpleModalOptions,\r\n  DefaultSimpleModalOptionConfig,\r\n  SimpleModalOptions,\r\n} from './simple-modal-options';\r\n\r\n@NgModule({\r\n  declarations: [SimpleModalHolderComponent, SimpleModalWrapperComponent],\r\n  providers: [\r\n    SimpleModalService,\r\n    {\r\n      provide: DefaultSimpleModalOptionConfig,\r\n      useValue: defaultSimpleModalOptions,\r\n    },\r\n  ],\r\n  imports: [CommonModule],\r\n  entryComponents: [SimpleModalHolderComponent, SimpleModalWrapperComponent],\r\n})\r\nexport class SimpleModalModule {\r\n  static forRoot(\r\n    config: SimpleModalServiceConfig,\r\n    defaultModalOptions?: SimpleModalOptions\r\n  ): ModuleWithProviders {\r\n    return {\r\n      ngModule: SimpleModalModule,\r\n      providers: [\r\n        { provide: SimpleModalServiceConfig, useValue: config },\r\n        {\r\n          provide: SimpleModalService,\r\n          useFactory: SimpleModalServiceFactory,\r\n          deps: [ComponentFactoryResolver, ApplicationRef, Injector, SimpleModalServiceConfig],\r\n        },\r\n        {\r\n          provide: DefaultSimpleModalOptionConfig,\r\n          useValue: defaultModalOptions || defaultSimpleModalOptions,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n","import { ElementRef, HostListener, OnDestroy } from '@angular/core';\r\nimport { Observable, Observer, Subject, BehaviorSubject } from 'rxjs';\r\n\r\nimport { SimpleModalOptions } from './simple-modal-options';\r\n\r\nexport interface OnDestroyLike {\r\n  ngOnDestroy(): void;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Abstract modal\r\n * @template T - modal data;\r\n * @template T1 - modal result\r\n */\r\nexport abstract class SimpleModalComponent<T, T1> {\r\n  /**\r\n   * Observer to return result from modal\r\n   */\r\n  private observer: Observer<T1>;\r\n\r\n  /**\r\n   * Dialog result\r\n   * @type {T1}\r\n   */\r\n  result: T1;\r\n\r\n  /**\r\n   * Dialog wrapper (modal placeholder)\r\n   */\r\n  wrapper: ElementRef;\r\n\r\n  /**\r\n   * ref of options for this component\r\n   */\r\n  options: SimpleModalOptions;\r\n\r\n  /**\r\n   * ready$ is when all animations and focusing have comleted\r\n   */\r\n  _ready$ = new BehaviorSubject<boolean>(false);\r\n\r\n  /**\r\n   * Callback to the holders close function\r\n   */\r\n  private closerCallback: (component) => Promise<any> = () => Promise.resolve();\r\n\r\n  /**\r\n   * Constructor\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * Maps your object passed in the creation to fields in your own Dialog classes\r\n   * @param {T} data\r\n   */\r\n  mapDataObject(data: T): void {\r\n    data = data || <T>{};\r\n    const keys = Object.keys(data);\r\n    for (let i = 0, length = keys.length; i < length; i++) {\r\n      const key = keys[i];\r\n      if (\r\n        data[key] &&\r\n        this[key] &&\r\n        typeof data[key] === 'object' &&\r\n        typeof this[key] === 'object'\r\n      ) {\r\n        Object.assign(this[key], data[key]);\r\n      } else {\r\n        this[key] = data[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup observer\r\n   * @return {Observable<T1>}\r\n   */\r\n  setupObserver(): Observable<T1> {\r\n    return Observable.create(observer => {\r\n      this.observer = observer;\r\n\r\n      // called if observable is unsubscribed to\r\n      return () => {\r\n        this.close();\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Defines what happens when close is called - default this\r\n   * will just call the default remove modal process. If overriden\r\n   * must include\r\n   * @param callback\r\n   */\r\n  onClosing(callback: (component: SimpleModalComponent<any, any>) => Promise<any>): void {\r\n    this.closerCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Closes modal\r\n   */\r\n  close(): Promise<any> {\r\n    return this.closerCallback(this).then(v => {\r\n      if (this.observer) {\r\n        this.observer.next(this.result);\r\n        this.observer.complete();\r\n      }\r\n      return v;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * keypress binding ngx way\r\n   * @param evt\r\n   */\r\n  @HostListener('document:keydown.escape', ['$event'])\r\n  onKeydownHandler(evt: KeyboardEvent) {\r\n    if (this.options && this.options.closeOnEscape) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  get ready$() {\r\n    return this._ready$.asObservable();\r\n  }\r\n\r\n  markAsReady() {\r\n    this._ready$.next(true);\r\n  }\r\n}\r\n"]}